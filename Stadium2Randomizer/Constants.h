#pragma once

#include <stdint.h>

#undef SING

/*
 * There are two namespaces for infos here: TableInfo and GameInfo.
 * GameInfo keeps information used in the game that can be found in structs.
 * TableInfo only has indices for tables from the rom.
 * if you use a value from a struct with a value from TableInfo, make sure to use the right conversion
 */

namespace TableInfo {

	//from the text table
	enum TextNumber {
		POKEMON_NAMES = 0x00,
		MOVE_NAMES = 0x06,
		MOVE_DESCRIPTIONS = 0x07,
		TEXT_TRAINER_NAMES = 0x2A,
		
		TEXT_TRAINER_TEXT_FIRST = 0x4C
	};

	//for text subtable TEXT_TRAINER_TEXT_N
	enum StringTableNumber {
		TRAINERTEXT_NICKNAME1 = 33,
		TRAINERTEXT_NICKNAME2 = 34,
		TRAINERTEXT_NICKNAME3 = 35,
		TRAINERTEXT_NICKNAME4 = 36,
		TRAINERTEXT_NICKNAME5 = 37,
		TRAINERTEXT_NICKNAME6 = 38
	};

	//index in TEXT_TRAINER_NAMES table. note that these are trainerId - 1, as this table is 0 based, but trainerId is 1 based
	enum TrainerNames {
		GRUNT,
		EXECUTIVE,
		RIVAL,
		LANCE,
		WILL,
		BRUNO,
		KAREN,
		KOGA,
		CLAIR,
		CHUCK,
		JASMINE,
		PRYCE,
		MORTY,
		BUGSY,
		WHITNEY,
		FALKNER,
		CAL,
		RED,
		BLUE,
		BLAINE,
		SABRINA,
		JANINE,
		ERIKA,
		LT_SURGE,
		MISTY,
		BROCK,
		CLARK,
		MARTY,
		YANG,
		BRUCE,
		JENSEN,
		CRAIG,
		ROBERTO,
		CHESTER,
		CLIFFORD,
		PEDRO,
		BAXTER,
		CURTIS,
		CLIFF,
		DILLON,
		MARCUS,
		DWIGHT,
		CURT,
		GERALD,
		TRAVIS,
		OLIVER,
		MASON,
		CLAUDE,
		DARCY,
		BERNIE,
		WYATT,
		ADAM,
		DAREN,
		NELSON,
		TERRY,
		KATHY,
		MELISSA,
		EMIKO,
		CHASE,
		GRANT,
		REX,
		CHEN,
		TY,
		VINCE,
		NICK,
		ALVIN,
		MATT,
		CHAZ,
		PEGGY,
		HOLLY,
		JAN_AND_JANE,
		MIN_AND_LYN,
		FLORIA,
		TINA,
		JANET,
		CORA,
		STACY,
		ALISSA,
		MOLLY,
		CARMEN,
		GLORIA,
		RITA,
		CAROL,
		LOIS,
		P1,
		P2,
		RENTAL,
		P1_2,
		COLE,
		MELVIN,
		CARSON,
		CLAYTON,
		JONATHAN,
		CYNDY,
		NANCY,
		JOSEPH,
		NAOMI,
		TAMMY,
		DUSTIN,
		NOLAN,
		CONNOR,
		BECKY,
		FERRIS,
		JULIAN,
		STUDENT,
		CARRIE
	};

	//for roster table, specifically trainer roster (+5)
	enum TrainerRosters {
		UNKNOWN1 = 0,
		UNKNOWN2 = 1,
		POKE_CUP_R1_POKEBALL = 2,
		POKE_CUP_R1_GREATBALL = 3,
		POKE_CUP_R1_ULTRABALL = 4,
		POKE_CUP_R1_MASTERBALL = 5,
		LITTLECUP_R1 = 6,
		PRIME_CUP_R1 = 7,

		FALKNER_GYM_R1 = 8,
		BUGSY_GYM_R1 = 9,
		WHITNEY_GYM_R1 = 10,
		MORTY_GYM_R1 = 11,
		CHUCK_GYM_R1 = 12,
		JASMINE_GYM_R1 = 13,
		ROCKET_ASSAULT_R1 = 14,
		PRICE_GYM_R1 = 15,
		CLAIR_GYM_R1 = 16,
		ELITE_4_R1 = 17,
		LANCE_R1 = 18,
		SURGE_R1 = 19,
		SABRINA_R1 = 20,
		MISTY_R1 = 21,
		ERIKA_R1 = 22,
		JANINE_R1 = 23,
		BROCK_R1 = 24,
		BLAINE_R1 = 25,
		BLUE_R1 = 26,
		RED_R1 = 27,

		RIVAL_R1 = 28,

		POKE_CUP_R2_POKEBALL = 29,
		POKE_CUP_R2_GREATBALL = 30,
		POKE_CUP_R2_ULTRABALL = 31,
		POKE_CUP_R2_MASTERBALL = 32,
		LITTLE_CUP_R2 = 33,
		PRIME_CUP_R2 = 34,

		FALKNER_GYM_R2 = 35,
		BUGSY_GYM_R2 = 36,
		WHITNEY_GYM_R2 = 37,
		MORTY_GYM_R2 = 38,
		CHUCK_GYM_R2 = 39,
		JASMINE_GYM_R2 = 40,
		ROCKET_ASSAULT_R2 = 41,
		PRICE_GYM_R2 = 42,
		CLAIR_GYM_R2 = 43,
		ELITE_4_R2 = 44,
		LANCE_R2 = 45,
		SURGE_R2 = 46,
		SABRINA_R2 = 47,
		MISTY_R2 = 48,
		ERIKA_R2 = 49,
		JANINE_R2 = 50,
		BROCK_R2 = 51,
		BLAINE_R2 = 52,
		BLUE_R2 = 53,
		RED_R2 = 54,

		RIVAL_R2 = 55,

		CHALLENGE_CUP_R1_POKEBALL = 56,
		CHALLENGE_CUP_R1_GREATBALL = 57,
		CHALLENGE_CUP_R1_ULTRABALL = 58,
		CHALLENGE_CUP_R1_MASTERBALL = 59,
		CHALLENGE_CUP_R2_POKEBALL = 60,
		CHALLENGE_CUP_R2_GREATBALL = 61,
		CHALLENGE_CUP_R2_ULTRABALL = 62,
		CHALLENGE_CUP_R2_MASTERBALL = 63,

		POKEMON_ACADEMY_CLASS_1 = 64,
		POKEMON_ACADEMY_CLASS_2 = 65,
		POKEMON_ACADEMY_CLASS_3 = 66
	};

	
}





namespace GameInfo {
	enum ItemId : uint8_t {
		NO_ITEM = 0x00,
		MASTER_BALL = 0x01,
		ULTRA_BALL = 0x02,
		BRIGHTPOWDER = 0x03,
		GREAT_BALL = 0x04,
		POKE_BALL = 0x05,
		ITEM_06 = 0x06,
		BICYCLE = 0x07,
		MOON_STONE = 0x08,
		ANTIDOTE = 0x09,
		BURN_HEAL = 0x0A,
		ICE_HEAL = 0x0B,
		AWAKENING = 0x0C,
		PARLYZ_HEAL = 0x0D,
		FULL_RESTORE = 0x0E,
		MAX_POTION = 0x0F,
		HYPER_POTION = 0x10,
		SUPER_POTION = 0x11,
		POTION = 0x12,
		ESCAPE_ROPE = 0x13,
		REPEL = 0x14,
		MAX_ELIXER = 0x15,
		FIRE_STONE = 0x16,
		THUNDERSTONE = 0x17,
		WATER_STONE = 0x18,
		ITEM_19 = 0x19,
		HP_UP = 0x1A,
		PROTEIN = 0x1B,
		IRON = 0x1C,
		CARBOS = 0x1D,
		LUCKY_PUNCH = 0x1E,
		CALCIUM = 0x1F,
		RARE_CANDY = 0x20,
		X_ACCURACY = 0x21,
		LEAF_STONE = 0x22,
		METAL_POWDER = 0x23,
		NUGGET = 0x24,
		POKE_DOLL = 0x25,
		FULL_HEAL = 0x26,
		REVIVE = 0x27,
		MAX_REVIVE = 0x28,
		GUARD_SPEC = 0x29,
		SUPER_REPEL = 0x2A,
		MAX_REPEL = 0x2B,
		DIRE_HIT = 0x2C,
		ITEM_2D = 0x2D,
		FRESH_WATER = 0x2E,
		SODA_POP = 0x2F,
		LEMONADE = 0x30,
		X_ATTACK = 0x31,
		ITEM_32 = 0x32,
		X_DEFEND = 0x33,
		X_SPEED = 0x34,
		X_SPECIAL = 0x35,
		COIN_CASE = 0x36,
		ITEMFINDER = 0x37,
		ITEM_38 = 0x38,
		EXP_SHARE = 0x39,
		OLD_ROD = 0x3A,
		GOOD_ROD = 0x3B,
		SILVER_LEAF = 0x3C,
		SUPER_ROD = 0x3D,
		PP_UP = 0x3E,
		ETHER = 0x3F,
		MAX_ETHER = 0x40,
		ELIXER = 0x41,
		RED_SCALE = 0x42,
		SECRETPOTION = 0x43,
		S_S_TICKET = 0x44,
		MYSTERY_EGG = 0x45,
		CLEAR_BELL = 0x46,
		SILVER_WING = 0x47,
		MOOMOO_MILK = 0x48,
		QUICK_CLAW = 0x49,
		PSNCUREBERRY = 0x4A,
		GOLD_LEAF = 0x4B,
		SOFT_SAND = 0x4C,
		SHARP_BEAK = 0x4D,
		PRZCUREBERRY = 0x4E,
		BURNT_BERRY = 0x4F,
		ICE_BERRY = 0x50,
		POISON_BARB = 0x51,
		KINGS_ROCK = 0x52,
		BITTER_BERRY = 0x53,
		MINT_BERRY = 0x54,
		RED_APRICORN = 0x55,
		TINYMUSHROOM = 0x56,
		BIG_MUSHROOM = 0x57,
		SILVERPOWDER = 0x58,
		BLU_APRICORN = 0x59,
		ITEM_5A = 0x5A,
		AMULET_COIN = 0x5B,
		YLW_APRICORN = 0x5C,
		GRN_APRICORN = 0x5D,
		CLEANSE_TAG = 0x5E,
		MYSTIC_WATER = 0x5F,
		TWISTEDSPOON = 0x60,
		WHT_APRICORN = 0x61,
		BLACKBELT = 0x62,
		BLK_APRICORN = 0x63,
		ITEM_64 = 0x64,
		PNK_APRICORN = 0x65,
		BLACKGLASSES = 0x66,
		SLOWPOKETAIL = 0x67,
		PINK_BOW = 0x68,
		STICK = 0x69,
		SMOKE_BALL = 0x6A,
		NEVERMELTICE = 0x6B,
		MAGNET = 0x6C,
		MIRACLEBERRY = 0x6D,
		PEARL = 0x6E,
		BIG_PEARL = 0x6F,
		EVERSTONE = 0x70,
		SPELL_TAG = 0x71,
		RAGECANDYBAR = 0x72,
		GS_BALL = 0x73,
		BLUE_CARD = 0x74,
		MIRACLE_SEED = 0x75,
		THICK_CLUB = 0x76,
		FOCUS_BAND = 0x77,
		ITEM_78 = 0x78,
		ENERGYPOWDER = 0x79,
		ENERGY_ROOT = 0x7A,
		HEAL_POWDER = 0x7B,
		REVIVAL_HERB = 0x7C,
		HARD_STONE = 0x7D,
		LUCKY_EGG = 0x7E,
		CARD_KEY = 0x7F,
		MACHINE_PART = 0x80,
		EGG_TICKET = 0x81,
		LOST_ITEM = 0x82,
		STARDUST = 0x83,
		STAR_PIECE = 0x84,
		BASEMENT_KEY = 0x85,
		PASS = 0x86,
		ITEM_87 = 0x87,
		ITEM_88 = 0x88,
		ITEM_89 = 0x89,
		CHARCOAL = 0x8A,
		BERRY_JUICE = 0x8B,
		SCOPE_LENS = 0x8C,
		ITEM_8D = 0x8D,
		ITEM_8E = 0x8E,
		METAL_COAT = 0x8F,
		DRAGON_FANG = 0x90,
		ITEM_91 = 0x91,
		LEFTOVERS = 0x92,
		ITEM_93 = 0x93,
		ITEM_94 = 0x94,
		ITEM_95 = 0x95,
		MYSTERYBERRY = 0x96,
		DRAGON_SCALE = 0x97,
		BERSERK_GENE = 0x98,
		ITEM_99 = 0x99,
		ITEM_9A = 0x9A,
		ITEM_9B = 0x9B,
		SACRED_ASH = 0x9C,
		HEAVY_BALL = 0x9D,
		FLOWER_MAIL = 0x9E,
		LEVEL_BALL = 0x9F,
		LURE_BALL = 0xA0,
		FAST_BALL = 0xA1,
		ITEM_A2 = 0xA2,
		LIGHT_BALL = 0xA3,
		FRIEND_BALL = 0xA4,
		MOON_BALL = 0xA5,
		LOVE_BALL = 0xA6,
		NORMAL_BOX = 0xA7,
		GORGEOUS_BOX = 0xA8,
		SUN_STONE = 0xA9,
		POLKADOT_BOW = 0xAA,
		ITEM_AB = 0xAB,
		UP_GRADE = 0xAC,
		BERRY = 0xAD,
		GOLD_BERRY = 0xAE,
		SQUIRTBOTTLE = 0xAF,
		ITEM_B0 = 0xB0,
		PARK_BALL = 0xB1,
		RAINBOW_WING = 0xB2,
		ITEM_B3 = 0xB3,
		BRICK_PIECE = 0xB4,
		SURF_MAIL = 0xB5,
		LITEBLUEMAIL = 0xB6,
		PORTRAITMAIL = 0xB7,
		LOVELY_MAIL = 0xB8,
		EON_MAIL = 0xB9,
		MORPH_MAIL = 0xBA,
		BLUESKY_MAIL = 0xBB,
		MUSIC_MAIL = 0xBC,
		MIRAGE_MAIL = 0xBD,
		ITEM_BE = 0xBE,
		TM_01 = 0xBF,
		TM_02 = 0xC0,
		TM_03 = 0xC1,
		TM_04 = 0xC2,
		ITEM_C3 = 0xC3,
		TM_05 = 0xC4,
		TM_06 = 0xC5,
		TM_07 = 0xC6,
		TM_08 = 0xC7,
		TM_09 = 0xC8,
		TM_10 = 0xC9,
		TM_11 = 0xCA,
		TM_12 = 0xCB,
		TM_13 = 0xCC,
		TM_14 = 0xCD,
		TM_15 = 0xCE,
		TM_16 = 0xCF,
		TM_17 = 0xD0,
		TM_18 = 0xD1,
		TM_19 = 0xD2,
		TM_20 = 0xD3,
		TM_21 = 0xD4,
		TM_22 = 0xD5,
		TM_23 = 0xD6,
		TM_24 = 0xD7,
		TM_25 = 0xD8,
		TM_26 = 0xD9,
		TM_27 = 0xDA,
		TM_28 = 0xDB,
		ITEM_DC = 0xDC,
		TM_29 = 0xDD,
		TM_30 = 0xDE,
		TM_31 = 0xDF,
		TM_32 = 0xE0,
		TM_33 = 0xE1,
		TM_34 = 0xE2,
		TM_35 = 0xE3,
		TM_36 = 0xE4,
		TM_37 = 0xE5,
		TM_38 = 0xE6,
		TM_39 = 0xE7,
		TM_40 = 0xE8,
		TM_41 = 0xE9,
		TM_42 = 0xEA,
		TM_43 = 0xEB,
		TM_44 = 0xEC,
		TM_45 = 0xED,
		TM_46 = 0xEE,
		TM_47 = 0xEF,
		TM_48 = 0xF0,
		TM_49 = 0xF1,
		TM_50 = 0xF2,
		HM_01 = 0xF3,
		HM_02 = 0xF4,
		HM_03 = 0xF5,
		HM_04 = 0xF6,
		HM_05 = 0xF7,
		HM_06 = 0xF8,
		HM_07 = 0xF9,
		HM_08 = 0xFA
	};

	extern char ItemNames[][16];
}






namespace GameInfo {
	enum MoveId : uint8_t {
		POUND = 0x01,
		KARATE_CHOP = 0x02,
		DOUBLESLAP = 0x03,
		COMET_PUNCH = 0x04,
		MEGA_PUNCH = 0x05,
		PAY_DAY = 0x06,
		FIRE_PUNCH = 0x07,
		ICE_PUNCH = 0x08,
		THUNDERPUNCH = 0x09,
		SCRATCH = 0x0A,
		VICEGRIP = 0x0B,
		GUILLOTINE = 0x0C,
		RAZOR_WIND = 0x0D,
		SWORDS_DANCE = 0x0E,
		CUT = 0x0F,
		GUST = 0x10,
		WING_ATTACK = 0x11,
		WHIRLWIND = 0x12,
		FLY = 0x13,
		BIND = 0x14,
		SLAM = 0x15,
		VINE_WHIP = 0x16,
		STOMP = 0x17,
		DOUBLE_KICK = 0x18,
		MEGA_KICK = 0x19,
		JUMP_KICK = 0x1A,
		ROLLING_KICK = 0x1B,
		SAND_ATTACK = 0x1C,
		HEADBUTT = 0x1D,
		HORN_ATTACK = 0x1E,
		FURY_ATTACK = 0x1F,
		HORN_DRILL = 0x20,
		TACKLE = 0x21,
		BODY_SLAM = 0x22,
		WRAP = 0x23,
		TAKE_DOWN = 0x24,
		THRASH = 0x25,
		DOUBLE_EDGE = 0x26,
		TAIL_WHIP = 0x27,
		POISON_STING = 0x28,
		TWINEEDLE = 0x29,
		PIN_MISSILE = 0x2A,
		LEER = 0x2B,
		BITE = 0x2C,
		GROWL = 0x2D,
		ROAR = 0x2E,
		SING = 0x2F,
		SUPERSONIC = 0x30,
		SONICBOOM = 0x31,
		DISABLE = 0x32,
		ACID = 0x33,
		EMBER = 0x34,
		FLAMETHROWER = 0x35,
		MIST = 0x36,
		WATER_GUN = 0x37,
		HYDRO_PUMP = 0x38,
		SURF = 0x39,
		ICE_BEAM = 0x3A,
		BLIZZARD = 0x3B,
		PSYBEAM = 0x3C,
		BUBBLEBEAM = 0x3D,
		AURORA_BEAM = 0x3E,
		HYPER_BEAM = 0x3F,
		PECK = 0x40,
		DRILL_PECK = 0x41,
		SUBMISSION = 0x42,
		LOW_KICK = 0x43,
		COUNTER = 0x44,
		SEISMIC_TOSS = 0x45,
		STRENGTH = 0x46,
		ABSORB = 0x47,
		MEGA_DRAIN = 0x48,
		LEECH_SEED = 0x49,
		GROWTH = 0x4A,
		RAZOR_LEAF = 0x4B,
		SOLARBEAM = 0x4C,
		POISONPOWDER = 0x4D,
		STUN_SPORE = 0x4E,
		SLEEP_POWDER = 0x4F,
		PETAL_DANCE = 0x50,
		STRING_SHOT = 0x51,
		DRAGON_RAGE = 0x52,
		FIRE_SPIN = 0x53,
		THUNDERSHOCK = 0x54,
		THUNDERBOLT = 0x55,
		THUNDER_WAVE = 0x56,
		THUNDER = 0x57,
		ROCK_THROW = 0x58,
		EARTHQUAKE = 0x59,
		FISSURE = 0x5A,
		DIG = 0x5B,
		TOXIC = 0x5C,
		CONFUSION = 0x5D,
		PSYCHIC_M = 0x5E,
		HYPNOSIS = 0x5F,
		MEDITATE = 0x60,
		AGILITY = 0x61,
		QUICK_ATTACK = 0x62,
		RAGE = 0x63,
		TELEPORT = 0x64,
		NIGHT_SHADE = 0x65,
		MIMIC = 0x66,
		SCREECH = 0x67,
		DOUBLE_TEAM = 0x68,
		RECOVER = 0x69,
		HARDEN = 0x6A,
		MINIMIZE = 0x6B,
		SMOKESCREEN = 0x6C,
		CONFUSE_RAY = 0x6D,
		WITHDRAW = 0x6E,
		DEFENSE_CURL = 0x6F,
		BARRIER = 0x70,
		LIGHT_SCREEN = 0x71,
		HAZE = 0x72,
		REFLECT = 0x73,
		FOCUS_ENERGY = 0x74,
		BIDE = 0x75,
		METRONOME = 0x76,
		MIRROR_MOVE = 0x77,
		SELFDESTRUCT = 0x78,
		EGG_BOMB = 0x79,
		LICK = 0x7A,
		SMOG = 0x7B,
		SLUDGE = 0x7C,
		BONE_CLUB = 0x7D,
		FIRE_BLAST = 0x7E,
		WATERFALL = 0x7F,
		CLAMP = 0x80,
		SWIFT = 0x81,
		SKULL_BASH = 0x82,
		SPIKE_CANNON = 0x83,
		CONSTRICT = 0x84,
		AMNESIA = 0x85,
		KINESIS = 0x86,
		SOFTBOILED = 0x87,
		HI_JUMP_KICK = 0x88,
		GLARE = 0x89,
		DREAM_EATER = 0x8A,
		POISON_GAS = 0x8B,
		BARRAGE = 0x8C,
		LEECH_LIFE = 0x8D,
		LOVELY_KISS = 0x8E,
		SKY_ATTACK = 0x8F,
		TRANSFORM = 0x90,
		BUBBLE = 0x91,
		DIZZY_PUNCH = 0x92,
		SPORE = 0x93,
		FLASH = 0x94,
		PSYWAVE = 0x95,
		SPLASH = 0x96,
		ACID_ARMOR = 0x97,
		CRABHAMMER = 0x98,
		EXPLOSION = 0x99,
		FURY_SWIPES = 0x9A,
		BONEMERANG = 0x9B,
		REST = 0x9C,
		ROCK_SLIDE = 0x9D,
		HYPER_FANG = 0x9E,
		SHARPEN = 0x9F,
		CONVERSION = 0xA0,
		TRI_ATTACK = 0xA1,
		SUPER_FANG = 0xA2,
		SLASH = 0xA3,
		SUBSTITUTE = 0xA4,
		STRUGGLE = 0xA5,
		SKETCH = 0xA6,
		TRIPLE_KICK = 0xA7,
		THIEF = 0xA8,
		SPIDER_WEB = 0xA9,
		MIND_READER = 0xAA,
		NIGHTMARE = 0xAB,
		FLAME_WHEEL = 0xAC,
		SNORE = 0xAD,
		CURSE = 0xAE,
		FLAIL = 0xAF,
		CONVERSION2 = 0xB0,
		AEROBLAST = 0xB1,
		COTTON_SPORE = 0xB2,
		REVERSAL = 0xB3,
		SPITE = 0xB4,
		POWDER_SNOW = 0xB5,
		PROTECT = 0xB6,
		MACH_PUNCH = 0xB7,
		SCARY_FACE = 0xB8,
		FAINT_ATTACK = 0xB9,
		SWEET_KISS = 0xBA,
		BELLY_DRUM = 0xBB,
		SLUDGE_BOMB = 0xBC,
		MUD_SLAP = 0xBD,
		OCTAZOOKA = 0xBE,
		SPIKES = 0xBF,
		ZAP_CANNON = 0xC0,
		FORESIGHT = 0xC1,
		DESTINY_BOND = 0xC2,
		PERISH_SONG = 0xC3,
		ICY_WIND = 0xC4,
		DETECT = 0xC5,
		BONE_RUSH = 0xC6,
		LOCK_ON = 0xC7,
		OUTRAGE = 0xC8,
		SANDSTORM = 0xC9,
		GIGA_DRAIN = 0xCA,
		ENDURE = 0xCB,
		CHARM = 0xCC,
		ROLLOUT = 0xCD,
		FALSE_SWIPE = 0xCE,
		SWAGGER = 0xCF,
		MILK_DRINK = 0xD0,
		SPARK = 0xD1,
		FURY_CUTTER = 0xD2,
		STEEL_WING = 0xD3,
		MEAN_LOOK = 0xD4,
		ATTRACT = 0xD5,
		SLEEP_TALK = 0xD6,
		HEAL_BELL = 0xD7,
		RETURN = 0xD8,
		PRESENT = 0xD9,
		FRUSTRATION = 0xDA,
		SAFEGUARD = 0xDB,
		PAIN_SPLIT = 0xDC,
		SACRED_FIRE = 0xDD,
		MAGNITUDE = 0xDE,
		DYNAMICPUNCH = 0xDF,
		MEGAHORN = 0xE0,
		DRAGONBREATH = 0xE1,
		BATON_PASS = 0xE2,
		ENCORE = 0xE3,
		PURSUIT = 0xE4,
		RAPID_SPIN = 0xE5,
		SWEET_SCENT = 0xE6,
		IRON_TAIL = 0xE7,
		METAL_CLAW = 0xE8,
		VITAL_THROW = 0xE9,
		MORNING_SUN = 0xEA,
		SYNTHESIS = 0xEB,
		MOONLIGHT = 0xEC,
		HIDDEN_POWER = 0xED,
		CROSS_CHOP = 0xEE,
		TWISTER = 0xEF,
		RAIN_DANCE = 0xF0,
		SUNNY_DAY = 0xF1,
		CRUNCH = 0xF2,
		MIRROR_COAT = 0xF3,
		PSYCH_UP = 0xF4,
		EXTREMESPEED = 0xF5,
		ANCIENTPOWER = 0xF6,
		SHADOW_BALL = 0xF7,
		FUTURE_SIGHT = 0xF8,
		ROCK_SMASH = 0xF9,
		WHIRLPOOL = 0xFA,
		BEAT_UP = 0xFB,

		LAST_MOVE = 0xFB
	};

	extern char MoveNames[][16];
}





namespace GameInfo {
	enum PokemonId : uint8_t {
		NO_POKEMON = 0,
		BULBASAUR = 1,
		IVYSAUR = 2,
		VENUSAUR = 3,
		CHARMANDER = 4,
		CHARMELEON = 5,
		CHARIZARD = 6,
		SQUIRTLE = 7,
		WARTORTLE = 8,
		BLASTOISE = 9,
		CATERPIE = 10,
		METAPOD = 11,
		BUTTERFREE = 12,
		WEEDLE = 13,
		KAKUNA = 14,
		BEEDRILL = 15,
		PIDGEY = 16,
		PIDGEOTTO = 17,
		PIDGEOT = 18,
		RATTATA = 19,
		RATICATE = 20,
		SPEAROW = 21,
		FEAROW = 22,
		EKANS = 23,
		ARBOK = 24,
		PIKACHU = 25,
		RAICHU = 26,
		SANDSHREW = 27,
		SANDSLASH = 28,
		NIDORAN_F = 29,
		NIDORINA = 30,
		NIDOQUEEN = 31,
		NIDORAN_M = 32,
		NIDORINO = 33,
		NIDOKING = 34,
		CLEFAIRY = 35,
		CLEFABLE = 36,
		VULPIX = 37,
		NINETALES = 38,
		JIGGLYPUFF = 39,
		WIGGLYTUFF = 40,
		ZUBAT = 41,
		GOLBAT = 42,
		ODDISH = 43,
		GLOOM = 44,
		VILEPLUME = 45,
		PARAS = 46,
		PARASECT = 47,
		VENONAT = 48,
		VENOMOTH = 49,
		DIGLETT = 50,
		DUGTRIO = 51,
		MEOWTH = 52,
		PERSIAN = 53,
		PSYDUCK = 54,
		GOLDUCK = 55,
		MANKEY = 56,
		PRIMEAPE = 57,
		GROWLITHE = 58,
		ARCANINE = 59,
		POLIWAG = 60,
		POLIWHIRL = 61,
		POLIWRATH = 62,
		ABRA = 63,
		KADABRA = 64,
		ALAKAZAM = 65,
		MACHOP = 66,
		MACHOKE = 67,
		MACHAMP = 68,
		BELLSPROUT = 69,
		WEEPINBELL = 70,
		VICTREEBEL = 71,
		TENTACOOL = 72,
		TENTACRUEL = 73,
		GEODUDE = 74,
		GRAVELER = 75,
		GOLEM = 76,
		PONYTA = 77,
		RAPIDASH = 78,
		SLOWPOKE = 79,
		SLOWBRO = 80,
		MAGNEMITE = 81,
		MAGNETON = 82,
		FARFETCH_D = 83,
		DODUO = 84,
		DODRIO = 85,
		SEEL = 86,
		DEWGONG = 87,
		GRIMER = 88,
		MUK = 89,
		SHELLDER = 90,
		CLOYSTER = 91,
		GASTLY = 92,
		HAUNTER = 93,
		GENGAR = 94,
		ONIX = 95,
		DROWZEE = 96,
		HYPNO = 97,
		KRABBY = 98,
		KINGLER = 99,
		VOLTORB = 100,
		ELECTRODE = 101,
		EXEGGCUTE = 102,
		EXEGGUTOR = 103,
		CUBONE = 104,
		MAROWAK = 105,
		HITMONLEE = 106,
		HITMONCHAN = 107,
		LICKITUNG = 108,
		KOFFING = 109,
		WEEZING = 110,
		RHYHORN = 111,
		RHYDON = 112,
		CHANSEY = 113,
		TANGELA = 114,
		KANGASKHAN = 115,
		HORSEA = 116,
		SEADRA = 117,
		GOLDEEN = 118,
		SEAKING = 119,
		STARYU = 120,
		STARMIE = 121,
		MR_MIME = 122,
		SCYTHER = 123,
		JYNX = 124,
		ELECTABUZZ = 125,
		MAGMAR = 126,
		PINSIR = 127,
		TAUROS = 128,
		MAGIKARP = 129,
		GYARADOS = 130,
		LAPRAS = 131,
		DITTO = 132,
		EEVEE = 133,
		VAPOREON = 134,
		JOLTEON = 135,
		FLAREON = 136,
		PORYGON = 137,
		OMANYTE = 138,
		OMASTAR = 139,
		KABUTO = 140,
		KABUTOPS = 141,
		AERODACTYL = 142,
		SNORLAX = 143,
		ARTICUNO = 144,
		ZAPDOS = 145,
		MOLTRES = 146,
		DRATINI = 147,
		DRAGONAIR = 148,
		DRAGONITE = 149,
		MEWTWO = 150,
		MEW = 151,
		CHIKORITA = 152,
		BAYLEEF = 153,
		MEGANIUM = 154,
		CYNDAQUIL = 155,
		QUILAVA = 156,
		TYPHLOSION = 157,
		TOTODILE = 158,
		CROCONAW = 159,
		FERALIGATR = 160,
		SENTRET = 161,
		FURRET = 162,
		HOOTHOOT = 163,
		NOCTOWL = 164,
		LEDYBA = 165,
		LEDIAN = 166,
		SPINARAK = 167,
		ARIADOS = 168,
		CROBAT = 169,
		CHINCHOU = 170,
		LANTURN = 171,
		PICHU = 172,
		CLEFFA = 173,
		IGGLYBUFF = 174,
		TOGEPI = 175,
		TOGETIC = 176,
		NATU = 177,
		XATU = 178,
		MAREEP = 179,
		FLAAFFY = 180,
		AMPHAROS = 181,
		BELLOSSOM = 182,
		MARILL = 183,
		AZUMARILL = 184,
		SUDOWOODO = 185,
		POLITOED = 186,
		HOPPIP = 187,
		SKIPLOOM = 188,
		JUMPLUFF = 189,
		AIPOM = 190,
		SUNKERN = 191,
		SUNFLORA = 192,
		YANMA = 193,
		WOOPER = 194,
		QUAGSIRE = 195,
		ESPEON = 196,
		UMBREON = 197,
		MURKROW = 198,
		SLOWKING = 199,
		MISDREAVUS = 200,
		UNOWN = 201,
		WOBBUFFET = 202,
		GIRAFARIG = 203,
		PINECO = 204,
		FORRETRESS = 205,
		DUNSPARCE = 206,
		GLIGAR = 207,
		STEELIX = 208,
		SNUBBULL = 209,
		GRANBULL = 210,
		QWILFISH = 211,
		SCIZOR = 212,
		SHUCKLE = 213,
		HERACROSS = 214,
		SNEASEL = 215,
		TEDDIURSA = 216,
		URSARING = 217,
		SLUGMA = 218,
		MAGCARGO = 219,
		SWINUB = 220,
		PILOSWINE = 221,
		CORSOLA = 222,
		REMORAID = 223,
		OCTILLERY = 224,
		DELIBIRD = 225,
		MANTINE = 226,
		SKARMORY = 227,
		HOUNDOUR = 228,
		HOUNDOOM = 229,
		KINGDRA = 230,
		PHANPY = 231,
		DONPHAN = 232,
		PORYGON2 = 233,
		STANTLER = 234,
		SMEARGLE = 235,
		TYROGUE = 236,
		HITMONTOP = 237,
		SMOOCHUM = 238,
		ELEKID = 239,
		MAGBY = 240,
		MILTANK = 241,
		BLISSEY = 242,
		RAIKOU = 243,
		ENTEI = 244,
		SUICUNE = 245,
		LARVITAR = 246,
		PUPITAR = 247,
		TYRANITAR = 248,
		LUGIA = 249,
		HO_OH = 250,
		CELEBI = 251,
		LAST_POKEMON = 251,
		PKMN_252 = 252,
		EGG = 253
	};

	extern char PokemonNames[][16];


}


namespace GameInfo {
	enum TrainerCat {
		NO_CATEGORY,
		MEDIUM,
		COOLTRAINER_MALE,
		COOLTRAINER_FEMALE,
		BEAUTY,
		OFFICER,
		POKEMANIAC,
		SWIMMER_MALE,
		BURGLAR,
		BLACK_BELT,
		GUITARIST,
		CAMPER,
		PSYCHIC,
		GENTLEMAN,
		JUGGLER,
		SCHOOLBOY,
		SKIER,
		TEACHER,
		POKEFAN_MALE,
		POKEFAN_FEMALE,
		YOUNGSTER,
		FISHERMAN,
		BIRD_KEEPER,
		SCIENTIST,
		SWIMMER_FEMALE,
		PICNICKER,
		FIREBREATHER,
		TWINS,
		SAILOR,
		SAGE,
		BIKER,
		BOARDER,
		KIMONO_GIRL,
		LASS,
		BUG_CATCHER,
		HIKER,
		SUPER_NERD,
		GRUNT_MALE,
		GRUNT_FEMALE,
		CHAMPION,
		ELITE_FOUR,
		GYM_LEADER,
		POKEMON_TRAINER,
		RIVAL,
		EXECUTIVE_MALE,
		EXECUTIVE_FEMALE,
		RIVAL1,
		RIVAL2,
		RIVAL3,
		RIVAL4,
		RIVAL5,
		RIVAL6,
		RIVAL7,
		RIVAL8,
		RIVAL9,
		RIVAL10,
		RIVAL11,
		RIVAL12,
		RIVAL13,
		RIVAL14,
		RIVAL15,
		RIVAL16,
		RIVAL17
	};

	extern char TrainerCatNames[][19];

}




namespace GameInfo {

	//as saved in trainerId
	enum class TrainerNames {
		NO_TRAINER,
		GRUNT,
		EXECUTIVE,
		RIVAL,
		LANCE,
		WILL,
		BRUNO,
		KAREN,
		KOGA,
		CLAIR,
		CHUCK,
		JASMINE,
		PRYCE,
		MORTY,
		BUGSY,
		WHITNEY,
		FALKNER,
		CAL,
		RED,
		BLUE,
		BLAINE,
		SABRINA,
		JANINE,
		ERIKA,
		LT_SURGE,
		MISTY,
		BROCK,
		CLARK,
		MARTY,
		YANG,
		BRUCE,
		JENSEN,
		CRAIG,
		ROBERTO,
		CHESTER,
		CLIFFORD,
		PEDRO,
		BAXTER,
		CURTIS,
		CLIFF,
		DILLON,
		MARCUS,
		DWIGHT,
		CURT,
		GERALD,
		TRAVIS,
		OLIVER,
		MASON,
		CLAUDE,
		DARCY,
		BERNIE,
		WYATT,
		ADAM,
		DAREN,
		NELSON,
		TERRY,
		KATHY,
		MELISSA,
		EMIKO,
		CHASE,
		GRANT,
		REX,
		CHEN,
		TY,
		VINCE,
		NICK,
		ALVIN,
		MATT,
		CHAZ,
		PEGGY,
		HOLLY,
		JAN_AND_JANE,
		MIN_AND_LYN,
		FLORIA,
		TINA,
		JANET,
		CORA,
		STACY,
		ALISSA,
		MOLLY,
		CARMEN,
		GLORIA,
		RITA,
		CAROL,
		LOIS,
		P1,
		P2,
		RENTAL,
		P1_2,
		COLE,
		MELVIN,
		CARSON,
		CLAYTON,
		JONATHAN,
		CYNDY,
		NANCY,
		JOSEPH,
		NAOMI,
		TAMMY,
		DUSTIN,
		NOLAN,
		CONNOR,
		BECKY,
		FERRIS,
		JULIAN,
		STUDENT,
		CARRIE
	};

}




namespace GameInfo {
	enum Type : uint8_t {
		NORMAL = 0x00,
		FIGHTING = 0x01,
		FLYING = 0x02,
		POISON = 0x03,
		GROUND = 0x04,
		ROCK = 0x05,
		//wtf
		BUG = 0x07,
		GHOST = 0x08,
		STEEL = 0x09,
		//not sure why this gap exists.
		//if its just about physical vs special, i'd expect fire to be 0x10.
		//in the type name table, there is no gap here
		QUESTIONMARK_TYPE = 0x13,
		FIRE = 0x14,
		WATER = 0x15,
		GRASS = 0x16,
		ELECTRIC = 0x17,
		PSYCHIC_TYPE = 0x18,
		ICE = 0x19,
		DRAGON = 0x1A,
		DARK = 0x1B
	};
}

namespace GameInfo {
	extern const char* TypeNames[28];
}


namespace GameInfo {
	//these have a few holes that are not present in existing moves. might have to be tested
	enum MoveEffect : uint8_t {
		NO_EFFECT = 0,
		SLEEP_STATUS = 1,
		POISON_CHANCE = 2,
		DRAIN_HEALTH = 3,
		BURN_CHANCE = 4,
		FREEZE_CHANCE = 5,
		PARALYSIS_CHANCE = 6,
		KABOOM = 7,
		DREAM_EATER_EFFECT = 8,
		MIRROR_MOVE_EFFECT = 9,
		ATTACK_PLUS_ONE = 10,
		DEFENSE_PLUS_ONE = 11,
		SPEED_PLUS_ONE = 12,	//guessed
		SPA_PLUS_ONE = 13,
		SPD_PLUS_ONE = 14,		//guessed
		ACCURACY_PLUS_ONE = 15, //guessed
		EVASION_PLUS_ONE = 16,
		ALWAYS_HITS = 17,
		ATTACK_MINUS_ONE = 18,
		DEFENSE_MINUS_ONE = 19,
		SPEED_MINUS_ONE = 20,
		SPA_MINUS_ONE = 21,		//guessed
		SPD_MINUS_ONE = 22,		//guessed
		ACCURACY_MINUS_ONE = 23,
		EVASION_MINUS_ONE = 24,
		HAZE_EFFECT = 25,
		BIDE_EFFECT = 26,
		THRASHING_ABOUT = 27,
		PHASING = 28,
		MULTI_STRIKE = 29,
		CONVERSION_EFFECT = 30,
		FLINCH_CHANCE = 31,
		RECOVER_HEALTH = 32, //rest also has this, so rest seems to be hardcoded
		BAD_POISON_STATUS = 33,
		PAY_DAY_MONEY = 34,
		LIGHT_SCREEN_EFFECT = 35, 
		TRI_ATTACK_EFFECT = 36,

		ONE_HIT_KO = 38,
		RAZOR_WIND_EFFECT = 39,
		SUPER_FANG_EFFECT = 40,
		DAMAGE_IGNORES_STATS = 41, //dragon rage and sonic boom
		BINDING = 42,

		HITS_TWICE = 44,
		RECOIL_WHEN_MISSING = 45,
		MIST_EFFECT = 46,
		FOCUS_ENERGY_EFFECT = 47,
		RECOIL = 48,
		CONFUSE = 49,
		ATTACK_PLUS_TWO = 50,
		DEFENSE_PLUS_TWO = 51,
		SPEED_PLUS_TWO = 52,
		SPA_PLUS_TWO = 53, //guessed
		SPD_PLUS_TWO = 54,
		ACCURACY_PLUS_TWO = 55, //guessed
		EVASION_PLUS_TWO = 56, //guessed
		TRANSFORM_EFFECT = 57,
		ATTACK_MINUS_TWO = 58,
		DEFENSE_MINUS_TWO = 59,
		SPEED_MINUS_TWO = 60,
		SPA_MINUS_TWO = 61,		 //guessed
		SPD_MINUS_TWO = 62,		 //guessed
		ACCURACY_MINUS_TWO = 63, //guessed
		EVASION_MINUS_TWO = 64,	 //guessed
		REFLECT_EFFECT = 65,
		POISON_STATUS = 66,
		PARALYSIS_STATUS = 67,
		ATTACK_MINUS_ONE_CHANCE = 68,
		DEFENSE_MINUS_ONE_CHANCE = 69,
		SPEED_MINUS_ONE_CHANCE = 70,
		SPA_MINUS_ONE_CHANCE = 71, //guessed
		SPD_MINUS_ONE_CHANCE = 72,
		ACCURACY_MINUS_ONE_CHANCE = 73,
		EVASION_MINUS_ONE_CHANCE = 74, //guessed
		SKY_ATTACK_EFFECT = 75, //i dont know why this is unique to sky attack
		CONFUSE_CHANCE = 76,
		HITS_TWICE_POISON_CHANCE = 77,

		SUBSTITUTE_EFFECT = 79,
		RECHARGE_AFTER_USE = 80,
		RAGE_EFFECT = 81,
		MIMIC_EFFECT = 82,
		METRONOME_EFFECT = 83,
		LEECH_SEED_EFFECT = 84,
		SPLASH_EFFECT = 85,
		DISABLE_EFFECT = 86,
		DAMAGE_BY_LEVEL_EFFECT = 87,	//seismic toss, night shade
		PSYWAVE_EFFECT = 88,
		COUNTER_EFFECT = 89,
		ENCORE_EFFECT = 90,
		PAIN_SPLIT_EFFECT = 91,
		SNORE_EFFECT = 92, //has a chance parameter, and i dont know what it does; its 76
		CONVERSION_TWO_EFFECT = 93,
		NEXT_MOVE_HITS = 94,
		SKETCH_EFFECT = 95,

		SLEEP_TALK_EFFECT = 97,
		DESTINY_BOND_EFFECT = 98,
		BP_BASED_ON_HEALTH = 99,
		SPITE_EFFECT = 100,
		FALSE_SWIPE_EFFECT = 101,
		HEAL_BELL_EFFECT = 102,
		HIGH_PRIORITY = 103,
		TRIPLE_KICK_EFFECT = 104,
		ITEM_STEAL_CHANCE = 105,
		CANT_ESCAPE = 106,
		NIGHTMARE_EFFECT = 107,
		FLAME_WHEEL_EFFECT = 108,	//burn chance + auto thaw
		CURSE_EFFECT = 109,

		PROTECT_EFFECT = 111,
		SPIKES_EFFECT = 112,
		FORESIGHT_EFFECT = 113,
		PERISH_SONG_EFFECT = 114,
		SANDSTORM_EFFECT = 115,
		ENDURE_EFFECT = 116,
		ROLLOUT_EFFECT = 117,
		SWAGGER_EFFECT = 118,
		FURY_CUTTER_EFFECT = 119,
		ATTRACT_EFFECT = 120,
		RETURN_EFFECT = 121,
		PRESENT_EFFECT = 122,
		FRUSTRATION_EFFECT = 123,
		SAFEGUARD_EFFECT = 124,
		SACRED_FIRE_EFFECT = 125, //not sure why this is not shared with flame wheel
		MAGNITUDE_EFFECT = 126,
		BATON_PASS_EFFECT = 127,
		PURSUIT_EFFECT = 128,
		RAPID_SPIN_EFFECT = 129,


		MORNING_SUN_EFFECT = 132,
		SYNTHESIS_EFFECT = 133,
		MOONLIGHT_EFFECT = 134,
		HIDDEN_POWER_EFFECT = 135,	//includes bp chance
		RAIN_DANCE_EFFECT = 136,
		SUNNY_DAY_EFFECT = 137,
		ATTACK_PLUS_ONE_CHANCE = 138,
		DEFENSE_PLUS_ONE_CHANCE = 139,
		RAINBOW_CHANCE = 140,	//KappaPride

		BELLY_DRUM_EFFECT = 142,
		PSYCH_UP_EFFECT = 143,
		MIRROR_COAT_EFFECT = 144,
		SKULL_BASH_EFFECT = 145,
		TWISTER_EFFECT = 146,	//can hit fly + flinch chance
		HITS_DIGGING = 147,
		FUTURE_SIGHT_EFFECT = 148,
		HITS_FLYING = 149,
		HITS_MINIMIZED = 150,
		SOLAR_BEAM_EFFECT = 151,
		THUNDER_EFFECT = 152, //i guess paralysis + rain accuracy
		TELEPORT_EFFECT = 153,
		BEAT_UP_EFFECT = 154,
		SEMI_INVUL = 155,
		DEFENSE_CURL_EFFECT = 156,

	};
}
